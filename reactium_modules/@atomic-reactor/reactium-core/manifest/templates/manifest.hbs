/**
 * Generated by Reactium
 * DO NOT directly edit this file !!!!!!
 */
import op from 'object-path';
import _ from 'underscore';
import { isBrowserWindow } from '@atomic-reactor/reactium-sdk-core';

const deps = {};
const reqs = {
{{#each types}}
    '{{name}}': {
        {{#each domains}}
            '{{domain}}': {
                req: () => {
                    return import('{{file}}');
                },
                file: '{{file}}',
            },
        {{/each}}
    },
{{/each}}
};

const manifest = {
    get: () => {
        const domainLoaders = {};
        for (const [name, domains] of Object.entries(reqs)) {
            const loaders = [];
            for (const [domain, item] of Object.entries(domains)) {
                loaders.push({
                    name,
                    domain,
                    loader: () => new Promise((resolve, reject) => {
                        try {
                            item.req().then(module => {
                                resolve({
                                    name,
                                    domain,
                                    module,
                                });
                            });
                        } catch (error) {
                            const where = isBrowserWindow() ? ' in browser ' : ' on server ';
                            console.error(`Error loading manifest resource "${item.file}" of type ${name} from domain ${domain}${where}`, error);
                            resolve(false);
                        }
                    }),
                });
            }

            op.set(domainLoaders, [name], loaders);
        }

        return domainLoaders;
    },
    list: () => {
        return {{{manifest}}};
    },
}

export default manifest;
